[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "se-letters"
version = "1.0.0"
description = "Schneider Electric Obsolescence Letter Matching Pipeline"
authors = [
    {name = "SE Letters Team", email = "team@se-letters.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
keywords = ["nlp", "document-processing", "matching", "ai", "pipeline"]
dependencies = [
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "click>=8.1.7",
    "rich>=13.7.0",
    "tqdm>=4.66.1",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "openpyxl>=3.1.0",
    "PyMuPDF>=1.23.0",
    "python-docx>=1.1.0",
    "pytesseract>=0.3.10",
    "Pillow>=10.0.0",
    "sentence-transformers>=2.2.2",
    "faiss-cpu>=1.7.4",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "requests>=2.31.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
gpu = [
    "faiss-gpu>=1.7.4",
]

[project.urls]
Homepage = "https://github.com/humananalog/se-letters"
Documentation = "https://se-letters.readthedocs.io"
Repository = "https://github.com/humananalog/se-letters.git"
Issues = "https://github.com/humananalog/se-letters/issues"

[project.scripts]
se-letters = "se_letters.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
se_letters = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["se_letters"]
known_third_party = ["pytest", "pandas", "numpy", "torch", "transformers"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz.*",
    "faiss.*",
    "sentence_transformers.*",
    "pytesseract.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=se_letters",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
] 